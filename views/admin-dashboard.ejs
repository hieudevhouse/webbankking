<!DOCTYPE html>
<html lang="en">
<head>
  <title>Admin Manager</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #1e1b4b, #06b6d4);
      min-height: 100vh;
      margin: 0;
      display: flex;
      color: #e5e7eb;
      position: relative;
      overflow-x: hidden;
    }
    .container {
      display: flex;
      flex-direction: column;
      flex: 1;
      padding: 1rem;
      max-width: 1500px;
      margin: auto;
      z-index: 10;
    }
    .main-content {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(12px);
      border-radius: 1rem;
      padding: 1.5rem;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.3);
      margin-bottom: 4rem;
    }
    .sidebar {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      background: rgba(17, 24, 39, 0.95);
      backdrop-filter: blur(12px);
      border-top: 1px solid rgba(255, 255, 255, 0.3);
      padding: 0.5rem;
      box-shadow: 0 -4px 15px rgba(0, 0, 0, 0.3);
      z-index: 20;
      display: flex;
      justify-content: space-around;
      align-items: center;
    }
    .sidebar ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      width: 100%;
      justify-content: space-around;
    }
    .sidebar li {
      flex: 1;
      text-align: center;
    }
    .sidebar button {
      padding: 0.5rem;
      background: linear-gradient(90deg, #ec4899, #f472b6);
      color: white;
      border: none;
      border-radius: 0.5rem;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(236, 72, 153, 0.4);
    }
    .sidebar button:hover {
      background: linear-gradient(90deg, #db2777, #ec4899);
      transform: scale(1.05);
      box-shadow: 0 6px 20px rgba(236, 72, 153, 0.6);
    }
    .sidebar button.active {
      background: linear-gradient(90deg, #22d3ee, #06b6d4);
      box-shadow: 0 0 20px rgba(34, 211, 238, 0.7);
    }
    .section {
      display: none;
    }
    .section.active {
      display: block;
    }
    .table-wrapper {
      width: 100%;
      overflow-x: auto;
    }
    table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      background: rgba(255, 255, 255, 0.9);
      border-radius: 0.5rem;
      overflow: hidden;
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    }
    th, td {
      padding: 0.75rem;
      text-align: left;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      color: #000000;
      font-size: 0.875rem;
    }
    th {
      background: linear-gradient(90deg, #ec4899, #f472b6);
      color: white;
      text-transform: uppercase;
      font-size: 0.75rem;
      font-weight: 600;
    }
    th:nth-child(1), td:nth-child(1) { min-width: 60px; }
    th:nth-child(2), td:nth-child(2) { min-width: 120px; }
    th:nth-child(3), td:nth-child(3) { min-width: 100px; }
    th:nth-child(4), td:nth-child(4) { min-width: 80px; }
    th:nth-child(5), td:nth-child(5) { min-width: 80px; }
    th:nth-child(6), td:nth-child(6) { min-width: 80px; }
    td input[type="number"] {
      width: 100%;
      padding: 0.5rem;
      border: 1px solid #d1d5db;
      border-radius: 0.375rem;
      background: #f3f4f6;
      color: #000000;
      font-size: 0.875rem;
    }
    td input[type="number"]:disabled {
      background: #e5e7eb;
      cursor: not-allowed;
    }
    td input[type="checkbox"] {
      transform: scale(1.2);
      margin: 0 0.5rem;
      cursor: not-allowed;
      appearance: none;
      width: 1rem;
      height: 1rem;
      border: 2px solid #d1d5db;
      border-radius: 0.25rem;
      background-color: #f3f4f6;
      position: relative;
    }
    td input[type="checkbox"]:disabled {
      cursor: not-allowed;
    }
    td input[type="checkbox"]:checked:disabled {
      border-color: #22d3ee;
      background-color: #22d3ee;
    }
    td input[type="checkbox"]:checked:disabled::after {
      content: '✔';
      color: #ffffff;
      font-size: 0.75rem;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    .stats-container {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 1rem;
    }
    .stat-box {
      background: rgba(255, 255, 255, 0.2);
      padding: 1rem;
      border-radius: 0.5rem;
      text-align: center;
      flex: 1;
      min-width: 150px;
    }
    .stat-box h3 {
      color: #ffffff;
      font-size: 1rem;
      margin-bottom: 0.5rem;
    }
    .stat-box p {
      color: #22d3ee;
      font-size: 1.5rem;
      font-weight: 600;
    }
    .chart-container {
      width: 100%;
      max-width: 300px;
      height: 200px;
      margin: 0.5rem auto;
      filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
    }
    .charts-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }
    .pagination {
      margin-top: 1rem;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0.5rem;
    }
    .pagination button {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
      background: linear-gradient(90deg, #8b5cf6, #a78bfa);
      color: white;
      border-radius: 0.375rem;
      box-shadow: 0 4px 15px rgba(139, 92, 246, 0.4);
    }
    .pagination button:disabled {
      background: #6b7280;
      cursor: not-allowed;
      box-shadow: none;
    }
    .pagination button:hover:not(:disabled) {
      background: linear-gradient(90deg, #7c3aed, #8b5cf6);
      transform: scale(1.05);
    }
    .export-button {
      margin-bottom: 1rem;
      background: linear-gradient(90deg, #22d3ee, #06b6d4);
      box-shadow: 0 4px 15px rgba(34, 211, 238, 0.4);
    }
    .export-button:hover {
      background: linear-gradient(90deg, #0ea5e9, #22d3ee);
      transform: scale(1.05);
    }
    h1 {
      color: #ffffff;
      text-align: center;
      font-size: 1.75rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      background: linear-gradient(90deg, #22d3ee, #ec4899);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    h2 {
      color: #e5e7eb;
      font-size: 1.25rem;
      font-weight: 600;
      margin-top: 1rem;
      margin-bottom: 0.5rem;
    }
    .leaves {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 0;
    }
    .leaf {
      position: absolute;
      width: 8px;
      height: 8px;
      background: linear-gradient(45deg, rgba(255, 255, 255, 0.3), rgba(34, 211, 238, 0.3));
      border-radius: 50%;
      animation: fall 10s linear infinite;
      opacity: 0.7;
    }
    @keyframes fall {
      0% {
        transform: translateY(-100vh) rotate(0deg);
        opacity: 0.7;
      }
      100% {
        transform: translateY(100vh) rotate(360deg);
        opacity: 0;
      }
    }
    .leaf:nth-child(2n) {
      width: 12px;
      height: 12px;
      animation-duration: 12s;
      background: linear-gradient(45deg, rgba(236, 72, 153, 0.3), rgba(255, 255, 255, 0.3));
    }
    .leaf:nth-child(3n) {
      width: 6px;
      height: 6px;
      animation-duration: 8s;
    }
    @media (min-width: 768px) {
      .container {
        flex-direction: row;
        padding: 2rem;
        gap: 2rem;
      }
      .main-content {
        flex: 3;
        margin-bottom: 0;
      }
      .sidebar {
        position: static;
        width: auto;
        flex: 1;
        border-radius: 1rem;
        padding: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
      }
      .sidebar ul {
        flex-direction: column;
      }
      .sidebar button {
        padding: 0.75rem;
        font-size: 1rem;
      }
      .charts-wrapper {
        flex-direction: row;
        justify-content: center;
        gap: 1.5rem;
      }
      h1 {
        font-size: 2.5rem;
      }
      h2 {
        font-size: 1.75rem;
      }
      th, td {
        padding: 1rem;
        font-size: 0.875rem;
      }
      th {
        font-size: 0.875rem;
      }
    }
  </style>
</head>
<body>
  <div class="leaves">
    <div class="leaf" style="left: 10%; animation-delay: 0s;"></div>
    <div class="leaf" style="left: 20%; animation-delay: 1s;"></div>
    <div class="leaf" style="left: 30%; animation-delay: 2s;"></div>
    <div class="leaf" style="left: 40%; animation-delay: 3s;"></div>
    <div class="leaf" style="left: 50%; animation-delay: 4s;"></div>
    <div class="leaf" style="left: 60%; animation-delay: 5s;"></div>
    <div class="leaf" style="left: 70%; animation-delay: 6s;"></div>
    <div class="leaf" style="left: 80%; animation-delay: 7s;"></div>
    <div class="leaf" style="left: 90%; animation-delay: 8s;"></div>
  </div>
  <div class="container">
    <div class="main-content">
      <h1>Admin Manager</h1>
      <div id="statistics" class="section active">
        <h2>Thống Kê</h2>
    <div class="stats-container">
  <div class="stat-box">
    <h3>Số SV với 30,000 VNĐ</h3>
    <p><%- typeof count30000 !== 'undefined' ? count30000 : 0 %></p>
  </div>
  <div class="stat-box">
    <h3>Số SV với 80,000 VNĐ</h3>
    <p><%- typeof count80000 !== 'undefined' ? count80000 : 0 %></p>
  </div>
  <div class="stat-box">
    <h3>Tổng Tiền Đã Nộp</h3>
    <p><%- typeof totalAmount !== 'undefined' ? totalAmount.toLocaleString('vi-VN') : '0' %> VNĐ</p>
  </div>
</div>
        <div class="charts-wrapper">
          <div class="chart-container">
            <canvas id="paymentChart"></canvas>
          </div>
          <div class="chart-container">
            <canvas id="paymentPieChart"></canvas>
          </div>
        </div>
      </div>
      <div id="list" class="section">
        <h2>Danh Sách Sinh Viên</h2>
        <button class="export-button" onclick="exportToExcel()">Xuất Excel</button>
        <div class="table-wrapper">
          <table id="studentTable">
            <thead>
              <tr>
                <th>Số thứ tự</th>
                <th>Email</th>
                <th>Tên</th>
                <th>Mã SV</th>
                <th>Số Tiền</th>
                <th>Trạng thái</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
        <div class="pagination">
          <button id="prevPage" onclick="prevPage()">Trước</button>
          <span id="pageInfo"></span>
          <button id="nextPage" onclick="nextPage()">Sau</button>
        </div>
      </div>
    </div>
    <div class="sidebar">
      <ul>
        <li><button onclick="showSection('statistics')" class="active">Thống Kê</button></li>
        <li><button onclick="showSection('list')">Danh Sách</button></li>
      </ul>
    </div>
  </div>
  <script>
    const students = <%- JSON.stringify(students) %>;
    const itemsPerPage = 5;
    let currentPage = 1;

    function displayStudents(page) {
      const start = (page - 1) * itemsPerPage;
      const end = start + itemsPerPage;
      const table = document.querySelector('#studentTable tbody');
      table.innerHTML = '';
      students.slice(start, end).forEach((student, index) => {
        table.innerHTML += `
          <tr>
            <td>${start + index + 1}</td>
            <td>${student.email}</td>
            <td>${student.name}</td>
            <td>${student.studentId}</td>
            <td><input type="number" id="amount-${student._id}" value="${student.amount}" disabled></td>
            <td><input type="checkbox" id="paid-${student._id}" ${student.paymentStatus === 'complete' ? 'checked' : ''} disabled></td>
          </tr>
        `;
      });
      updatePagination();
    }

    function updatePagination() {
      const totalPages = Math.ceil(students.length / itemsPerPage);
      const prevButton = document.querySelector('#prevPage');
      const nextButton = document.querySelector('#nextPage');
      prevButton.disabled = currentPage === 1;
      nextButton.disabled = currentPage === totalPages;
      document.querySelector('#pageInfo').textContent = `Trang ${currentPage} / ${totalPages}`;
    }

    function prevPage() {
      if (currentPage > 1) {
        currentPage--;
        displayStudents(currentPage);
      }
    }

    function nextPage() {
      if (currentPage < Math.ceil(students.length / itemsPerPage)) {
        currentPage++;
        displayStudents(currentPage);
      }
    }

    function exportToExcel() {
      window.location.href = '/admin/export-students';
    }

    function showSection(sectionId) {
      document.querySelectorAll('.section').forEach(section => {
        section.classList.remove('active');
      });
      document.getElementById(sectionId).classList.add('active');
      document.querySelectorAll('.sidebar button').forEach(button => {
        button.classList.remove('active');
      });
      document.querySelector(`.sidebar button[onclick="showSection('${sectionId}')"]`).classList.add('active');
      if (sectionId === 'list') {
        currentPage = 1;
        displayStudents(currentPage);
      }
    }

    const ctx = document.getElementById('paymentChart').getContext('2d');
    const pieCtx = document.getElementById('paymentPieChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Đã Nộp', 'Chưa/Chờ Nộp'],
        datasets: [{
          label: 'Số Lượng',
          data: [<%- JSON.stringify(paidCount !== undefined ? paidCount : 0) %>, <%- JSON.stringify(unpaidCount !== undefined ? unpaidCount : 0) %>],
          backgroundColor: ['#00f7ff', '#ff007a'],
          borderColor: ['#00d4e0', '#e6006e'],
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              stepSize: 1,
              color: '#ffffff',
              font: { size: 12 }
            },
            grid: { color: 'rgba(255, 255, 255, 0.2)' }
          },
          x: {
            ticks: {
              color: '#ffffff',
              font: { size: 12 }
            },
            grid: { display: false }
          }
        },
        plugins: {
          legend: {
            labels: {
              color: '#ffffff',
              font: { size: 12 }
            }
          }
        }
      }
    });

    new Chart(pieCtx, {
      type: 'pie',
      data: {
        labels: ['Đã Nộp', 'Chưa/Chờ Nộp'],
        datasets: [{
          data: [<%- JSON.stringify(paidCount !== undefined ? paidCount : 0) %>, <%- JSON.stringify(unpaidCount !== undefined ? unpaidCount : 0) %>],
          backgroundColor: ['#00f7ff', '#ff007a'],
          borderColor: ['#00d4e0', '#e6006e'],
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'top',
            labels: {
              color: '#ffffff',
              font: { size: 12 }
            }
          },
          tooltip: {
            callbacks: {
              label: function(tooltipItem) {
                const total = <%- JSON.stringify((paidCount || 0) + (unpaidCount || 0)) %>;
                const value = tooltipItem.raw;
                const percentage = total ? ((value / total) * 100).toFixed(1) : 0;
                return `${tooltipItem.label}: ${value} (${percentage}%)`;
              }
            },
            backgroundColor: 'rgba(0, 0, 0, 0.8)',
            titleFont: { size: 12 },
            bodyFont: { size: 12 }
          }
        }
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      displayStudents(currentPage);
    });
  </script>
</body>
</html>